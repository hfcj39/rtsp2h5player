#!/usr/bin/env node
const childProcess = require('child_process');
const path = require('path');
const fs = require('fs');
let os = require('os');
console.log('exec postinstall... please wait...');

const rootpath = path.join(__dirname, '../', 'src', 'lib', 'extend');

function getCmd() {
    const clientname = 'live555client';
    const platformarch = os.arch();
    const platform = os.platform();
    return path.join(rootpath, platform, platformarch, clientname);
}

function getDir() {
    const platformarch = os.arch();
    const platform = os.platform();
    return path.join(rootpath, platform, platformarch);
}

function mkdirs(dirname, callback) {
    fs.access(dirname, function (err) {
        if (!err) {
            callback();
        } else {
            mkdirs(path.dirname(dirname), function () {
                fs.mkdir(dirname, callback);
            });
        }
    });
}

const configurepath = path.join(rootpath, 'src', 'configure');
childProcess.exec(configurepath, function (error, stdout, stderr) {
    if (error) {
        console.log(error);
        process.exit(1)
    } else {
        mkdirs(getDir(), function (err) {
            if (err) {
                console.log(err);
                process.exit(1)
            } else {
                const buildpath = path.join(rootpath, 'src', 'live555client');
                fs.rename(buildpath, getCmd(), function (err) {
                    if (err) {
                        console.log(err);
                        process.exit(1)
                    } else {
                        console.log('build success');
                    }
                });
            }
        });
    }
});

